parameters:

    vss_oauth_extension.providers.generic.oauth2.class:
        Vss\OAuthExtensionBundle\Providers\GenericOAuth2Provider

    vss_oauth_extension.providers.facebook.class:
        Vss\OAuthExtensionBundle\Providers\FacebookProvider

services:

    vss_oauth_extension.providers.generic.oauth2:
        class: %vss_oauth_extension.providers.generic.oauth2.class%
        abstract: true
        arguments:
            - "@vss_oauth.security.utils.browser_manager"
            - {}
            - ""

    vss_oauth_extension.fosub.user_manager.def:
        class: Vss\OAuthExtensionBundle\Security\OAuth\OAuthFOSUBManager
        abstract: true

    vss_oauth_extension.oauth_manager:
        class: Vss\OAuthExtensionBundle\Security\OAuth\OAuthManager
        arguments: ["@service_container", "@doctrine.orm.entity_manager"]

    vss_oauth_extension.grant.email:
        class: Vss\OAuthExtensionBundle\Grant\EmailGrant
        arguments:
            - "@fos_oauth_server.storage.default"
            - "@fos_user.user_provider.username_email"
            - "@security.encoder_factory"
        tags:
              - { name: fos_oauth_server.grant_extension, uri: 'http://oauth.vss.com/grants/email' }



    vss_oauth_extension.grant.role:
        class: Vss\OAuthExtensionBundle\Grant\RoleGrant
        arguments: ["@fos_oauth_server.storage.default", "@security.role_hierarchy"]
        tags:
              - { name: fos_oauth_server.grant_extension, uri: 'http://oauth.vss.com/grants/role' }

    vss_oauth_extension.grant.provider:
        class: Vss\OAuthExtensionBundle\Grant\ProviderGrant
        arguments: ["@vss_oauth_extension.oauth_manager", "@vss_oauth_extension.providers_utils.user_manager"]
        tags:
              - { name: fos_oauth_server.grant_extension, uri: 'http://oauth.vss.com/grants/provider' }

    vss_oauth.security.utils.browser_manager:
        class: Vss\OAuthExtensionBundle\Security\Utils\BrowserManager

    vss_oauth.security.utils.config_provider:
        class: Vss\OAuthExtensionBundle\Security\Utils\ConfigProvider
        arguments: ["@service_container", "@router"]

    vss_oauth.security.auth.role.provider:
        class: Vss\OAuthExtensionBundle\Security\RoleAuth\RoleTokenProvider
        arguments: ["@vss_oauth.security.utils.browser_manager"]

    vss_oauth.security.auth.role.admin:
        class: Vss\OAuthExtensionBundle\Security\RoleAuth\RoleAuthenticator
        arguments: ["ROLE_ADMIN", "@vss_oauth.security.auth.role.provider", "@vss_oauth.security.utils.config_provider"]

    vss_oaut.security.expired_listener:
        class: Vss\OAuthExtensionBundle\Security\Listener\ExpiredListener
        arguments: ["@security.token_storage", "@vss_oauth.security.utils.config_provider"]
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    vss_oaut.security.kernel_response_listener:
        class: Vss\OAuthExtensionBundle\Security\Listener\KernelResponseListener
        arguments: ["@security.token_storage"]
        tags:
            - { name: kernel.event_listener, event: kernel.response }